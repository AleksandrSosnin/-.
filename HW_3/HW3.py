from pymongo import MongoClient
import json


client = MongoClient('mongodb://localhost:27017/')

# –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –∫–æ–ª–ª–µ–∫—Ü–∏—é
db = client['books_db']
collection = db['books']

# –£–¥–∞–ª—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if 'books' in db.list_collection_names():
    db.drop_collection('books')
    print("üóëÔ∏è –°—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞.")

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON —Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –º—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–æ—Å–ª–µ —Å–∫—Ä–µ–π–ø–∏–Ω–≥–∞ —Å–∞–π—Ç–∞ —Å –∫–Ω–∏–≥–∞–º–∏
file_path = r'C:\Users\–°–∞—à–∞ - –õ—é—Ç—ã–π\Desktop\DataEng\HW_2\books.json'

try:
    with open(file_path, 'r', encoding='utf-8') as file:
        books_data = json.load(file)
except FileNotFoundError:
    print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
    exit()
except json.JSONDecodeError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON: {e}")
    exit()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
if not isinstance(books_data, list):
    print("‚ùå –û–∂–∏–¥–∞–ª—Å—è —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ –≤ JSON —Ñ–∞–π–ª–µ.")
    exit()

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ MongoDB
try:
    collection.insert_many(books_data)
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∫–Ω–∏–≥: {len(books_data)}")
except Exception as e:
    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")

# –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
print("\nüîé –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:")

# 1. –ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
title_query = collection.find_one({'title': 'A Light in the Attic'})
print(f"üìò –ö–Ω–∏–≥–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º 'A Light in the Attic': {title_query}\n")

# 2. –ù–∞–π—Ç–∏ –≤—Å–µ –∫–Ω–∏–≥–∏ —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º –≤—ã—à–µ 4.5
high_rating_books = list(collection.find({'rating': {'$gt': 4.5}}))
print(f"‚≠ê –ö–Ω–∏–≥–∏ —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º –≤—ã—à–µ 4.5: {len(high_rating_books)}")

# 3. –ù–∞–π—Ç–∏ –∫–Ω–∏–≥–∏ –¥–µ—à–µ–≤–ª–µ 20 —Ñ—É–Ω—Ç–æ–≤
cheap_books = list(collection.find({'price': {'$lt': 20}}))
print(f"üí∑ –ö–Ω–∏–≥–∏ –¥–µ—à–µ–≤–ª–µ 20 —Ñ—É–Ω—Ç–æ–≤: {len(cheap_books)}")

# 4. –ü–æ–¥—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥ –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
categories = collection.aggregate([
    {"$group": {"_id": "$category", "count": {"$sum": 1}}},
    {"$sort": {"count": -1}}
])
print("üìö –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
for category in categories:
    print(f" - {category['_id']}: {category['count']}")

# 5. –ù–∞–π—Ç–∏ —Å–∞–º—É—é –¥–æ—Ä–æ–≥—É—é –∫–Ω–∏–≥—É
most_expensive = collection.find_one(sort=[("price", -1)])
print(f"üíé –°–∞–º–∞—è –¥–æ—Ä–æ–≥–∞—è –∫–Ω–∏–≥–∞: {most_expensive}")

print("\nüéâ –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
